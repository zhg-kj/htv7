{"ast":null,"code":"import axios from \"axios\";\nimport DesoIdentity from \"./desoIdentity\";\nconst DEFAULT_NODE_URL = \"https://node.deso.org/api\";\nlet client = null;\nclass DesoApi {\n  constructor() {\n    this.client = null;\n    this.baseUrl = DEFAULT_NODE_URL;\n  }\n\n  // TRANSACTIONS\n  // USERS\n\n  // POSTS\n  async submitPost(publicKey, body) {\n    if (!publicKey) {\n      console.log(\"publicKey is required\");\n      return;\n    }\n    if (!body) {\n      console.log(\"body is required\");\n      return;\n    }\n    const di = new DesoIdentity();\n    const path = \"/v0/submit-post\";\n    const data = {\n      UpdaterPublicKeyBase58Check: publicKey,\n      PostHashHexToModify: \"\",\n      ParentStakeID: \"\",\n      Title: \"\",\n      BodyObj: {\n        Body: body,\n        ImageURLs: [],\n        VideoURLs: []\n      },\n      RecloutedPostHashHex: \"\",\n      Sub: \"\",\n      IsHidden: false,\n      MinFeeRateNanosPerKB: 1000\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      console.log(result.data);\n      const transactionHex = result.data.TransactionHex;\n      console.log(transactionHex);\n      const signedTransactionHex = await di.signTxAsync(transactionHex);\n      console.log(signedTransactionHex);\n      const rtnSubmitTransaction = await this.submitTransaction(signedTransactionHex);\n      console.log(rtnSubmitTransaction);\n      if (rtnSubmitTransaction) {\n        console.log('Submitted Post');\n      }\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  async submitTransaction(signedTransactionHex) {\n    if (!signedTransactionHex) {\n      console.log(\"signedTransactionHex is required\");\n      return;\n    }\n    const path = \"/v0/submit-transaction\";\n    const data = {\n      TransactionHex: signedTransactionHex\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      return result.data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n\n  // GET\n  async getPostsForPublicKey(publicKey) {\n    if (!publicKey) {\n      console.log(\"public key is required\");\n      return;\n    }\n    const path = \"/v0/get-posts-for-public-key\";\n    const data = {\n      PublicKeyBase58Check: publicKey,\n      Username: \"\",\n      ReaderPublicKeyBase58Check: \"\",\n      NumToFetch: 1,\n      MediaRequired: false\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      return result === null || result === void 0 ? void 0 : result.data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  async getSingleProfile(publicKey, username) {\n    if (!publicKey && !username) {\n      console.log(\"publicKey or username is required\");\n      return;\n    }\n    const path = \"/v0/get-single-profile\";\n    const data = {\n      PublicKeyBase58Check: publicKey,\n      Username: username\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      return result === null || result === void 0 ? void 0 : result.data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  async getSinglePost(postHash) {\n    let commentLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    let fetchParents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let commentOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let addGlobalFeedBool = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    if (!postHash) {\n      console.log(\"postHash is required\");\n      return;\n    }\n    const path = \"/v0/get-single-post\";\n    const data = {\n      PostHashHex: postHash,\n      ReaderPublicKeyBase58Check: \"\",\n      FetchParents: fetchParents,\n      CommentOffset: commentOffset,\n      CommentLimit: commentLimit,\n      AddGlobalFeedBool: addGlobalFeedBool\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      return result === null || result === void 0 ? void 0 : result.data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  async getUsersStateless(publicKeyList, skipForLeaderboard) {\n    if (!publicKeyList) {\n      console.log(\"publicKeyList is required\");\n      return;\n    }\n    const path = \"/v0/get-users-stateless\";\n    const data = {\n      PublicKeysBase58Check: publicKeyList,\n      SkipForLeaderboard: skipForLeaderboard\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      return result === null || result === void 0 ? void 0 : result.data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  async getProfilesPartialMatch(partialName) {\n    if (!partialName) {\n      console.log(\"partialName is required\");\n      return;\n    }\n    const path = \"/v0/get-profiles\";\n    const data = {\n      ReaderPublicKeyBase58Check: \"\",\n      UsernamePrefix: partialName\n    };\n    try {\n      const result = await this.getClient().post(path, data);\n      return result === null || result === void 0 ? void 0 : result.data;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  }\n  getClient() {\n    if (client) return client;\n    client = axios.create({\n      baseURL: this.baseUrl,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    return client;\n  }\n}\nexport default DesoApi;","map":{"version":3,"names":["axios","DesoIdentity","DEFAULT_NODE_URL","client","DesoApi","constructor","baseUrl","submitPost","publicKey","body","console","log","di","path","data","UpdaterPublicKeyBase58Check","PostHashHexToModify","ParentStakeID","Title","BodyObj","Body","ImageURLs","VideoURLs","RecloutedPostHashHex","Sub","IsHidden","MinFeeRateNanosPerKB","result","getClient","post","transactionHex","TransactionHex","signedTransactionHex","signTxAsync","rtnSubmitTransaction","submitTransaction","error","getPostsForPublicKey","PublicKeyBase58Check","Username","ReaderPublicKeyBase58Check","NumToFetch","MediaRequired","getSingleProfile","username","getSinglePost","postHash","commentLimit","fetchParents","commentOffset","addGlobalFeedBool","PostHashHex","FetchParents","CommentOffset","CommentLimit","AddGlobalFeedBool","getUsersStateless","publicKeyList","skipForLeaderboard","PublicKeysBase58Check","SkipForLeaderboard","getProfilesPartialMatch","partialName","UsernamePrefix","create","baseURL","headers","Accept"],"sources":["/Users/allenxu/projects/htv7/htv7/htv7/client/src/deso/desoAPI.js"],"sourcesContent":["import axios from \"axios\"\nimport DesoIdentity from \"./desoIdentity\"\n\nconst DEFAULT_NODE_URL = \"https://node.deso.org/api\"\nlet client = null\n\nclass DesoApi {\n    constructor() {\n        this.client = null\n        this.baseUrl = DEFAULT_NODE_URL\n    }\n\n    // TRANSACTIONS\n    // USERS\n\n    // POSTS\n    async submitPost(publicKey, body) {\n      if(!publicKey){\n          console.log(\"publicKey is required\")\n          return\n      }\n\n      if(!body){\n          console.log(\"body is required\")\n          return\n      }\n      \n      const di = new DesoIdentity();\n      const path = \"/v0/submit-post\"\n      const data = {\n          UpdaterPublicKeyBase58Check: publicKey,\n          PostHashHexToModify: \"\",\n          ParentStakeID: \"\",\n          Title: \"\",\n          BodyObj: {Body: body, ImageURLs: [], VideoURLs: []},\n          RecloutedPostHashHex: \"\",\n          Sub: \"\",\n          IsHidden:  false,\n          MinFeeRateNanosPerKB: 1000\n        }\n\n      try{\n          const result = await this.getClient().post(path, data)\n          console.log(result.data)\n          const transactionHex = result.data.TransactionHex\n          console.log(transactionHex)\n          const signedTransactionHex = await di.signTxAsync(transactionHex)\n          console.log(signedTransactionHex)\n          const rtnSubmitTransaction = await this.submitTransaction(signedTransactionHex) \n          console.log(rtnSubmitTransaction)\n\n          if(rtnSubmitTransaction) {\n            console.log('Submitted Post')\n          }\n      } catch (error) {\n          console.log(error)\n          return null\n      }\n    }\n\n  async submitTransaction(signedTransactionHex) {\n      if(!signedTransactionHex){\n          console.log(\"signedTransactionHex is required\")\n          return\n      }\n\n      const path = \"/v0/submit-transaction\"\n      const data = {\n          TransactionHex : signedTransactionHex\n      }\n      try{\n          const result = await this.getClient().post(path, data)\n          return result.data\n      } catch (error) {\n          console.log(error)\n          return null\n      }\n  }\n    \n    // GET\n    async getPostsForPublicKey(publicKey) {\n        if(!publicKey) {\n            console.log(\"public key is required\")\n            return\n        }\n\n        const path = \"/v0/get-posts-for-public-key\"\n        const data = {\n            PublicKeyBase58Check : publicKey,\n            Username : \"\",\n            ReaderPublicKeyBase58Check : \"\",\n            NumToFetch : 1,\n            MediaRequired : false\n        }\n        try{\n            const result = await this.getClient().post(path, data)\n            return result?.data\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n    }\n\n    async getSingleProfile(publicKey, username) {\n        if(!publicKey && !username){\n            console.log(\"publicKey or username is required\")\n            return\n        }\n\n        const path = \"/v0/get-single-profile\"\n        const data = {\n            PublicKeyBase58Check : publicKey,\n            Username : username\n        }\n        \n        try{\n            const result = await this.getClient().post(path, data)\n            return result?.data\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n    }\n\n    async getSinglePost(postHash, commentLimit = 20, fetchParents = false, commentOffset= 0, addGlobalFeedBool = false) {\n        if(!postHash){\n            console.log(\"postHash is required\")\n            return\n        }\n\n        const path = \"/v0/get-single-post\"\n        const data = {\n            PostHashHex :postHash,\n            ReaderPublicKeyBase58Check:\"\",\n            FetchParents:fetchParents,\n            CommentOffset:commentOffset,\n            CommentLimit:commentLimit,\n            AddGlobalFeedBool:addGlobalFeedBool\n        }\n        try{\n            const result = await this.getClient().post(path, data)\n            return result?.data\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n    }\n\n    async getUsersStateless(publicKeyList, skipForLeaderboard) {\n        if(!publicKeyList){\n            console.log(\"publicKeyList is required\")\n            return\n        }\n\n        const path = \"/v0/get-users-stateless\"\n        const data = {\n            PublicKeysBase58Check : publicKeyList,\n            SkipForLeaderboard : skipForLeaderboard\n        }\n        try{\n            const result = await this.getClient().post(path, data)\n            return result?.data\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n        \n    }\n\n    async getProfilesPartialMatch(partialName){\n        if(!partialName){\n            console.log(\"partialName is required\")\n            return\n        }\n\n        const path = \"/v0/get-profiles\"\n        const data = {\n            ReaderPublicKeyBase58Check : \"\",\n            UsernamePrefix : partialName\n        }\n        try{\n            const result = await this.getClient().post(path, data)\n            return result?.data\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n        \n    }\n\n    getClient (){\n        if (client) return client\n        client = axios.create({\n            baseURL: this.baseUrl,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          })\n          return client\n    }\n\n}\n\nexport default DesoApi"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,gBAAgB,GAAG,2BAA2B;AACpD,IAAIC,MAAM,GAAG,IAAI;AAEjB,MAAMC,OAAO,CAAC;EACVC,WAAW,GAAG;IACV,IAAI,CAACF,MAAM,GAAG,IAAI;IAClB,IAAI,CAACG,OAAO,GAAGJ,gBAAgB;EACnC;;EAEA;EACA;;EAEA;EACA,MAAMK,UAAU,CAACC,SAAS,EAAEC,IAAI,EAAE;IAChC,IAAG,CAACD,SAAS,EAAC;MACVE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC;IACJ;IAEA,IAAG,CAACF,IAAI,EAAC;MACLC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B;IACJ;IAEA,MAAMC,EAAE,GAAG,IAAIX,YAAY,EAAE;IAC7B,MAAMY,IAAI,GAAG,iBAAiB;IAC9B,MAAMC,IAAI,GAAG;MACTC,2BAA2B,EAAEP,SAAS;MACtCQ,mBAAmB,EAAE,EAAE;MACvBC,aAAa,EAAE,EAAE;MACjBC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;QAACC,IAAI,EAAEX,IAAI;QAAEY,SAAS,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAE,CAAC;MACnDC,oBAAoB,EAAE,EAAE;MACxBC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAG,KAAK;MAChBC,oBAAoB,EAAE;IACxB,CAAC;IAEH,IAAG;MACC,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtDJ,OAAO,CAACC,GAAG,CAACgB,MAAM,CAACb,IAAI,CAAC;MACxB,MAAMgB,cAAc,GAAGH,MAAM,CAACb,IAAI,CAACiB,cAAc;MACjDrB,OAAO,CAACC,GAAG,CAACmB,cAAc,CAAC;MAC3B,MAAME,oBAAoB,GAAG,MAAMpB,EAAE,CAACqB,WAAW,CAACH,cAAc,CAAC;MACjEpB,OAAO,CAACC,GAAG,CAACqB,oBAAoB,CAAC;MACjC,MAAME,oBAAoB,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAACH,oBAAoB,CAAC;MAC/EtB,OAAO,CAACC,GAAG,CAACuB,oBAAoB,CAAC;MAEjC,IAAGA,oBAAoB,EAAE;QACvBxB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EACF;EAEF,MAAMD,iBAAiB,CAACH,oBAAoB,EAAE;IAC1C,IAAG,CAACA,oBAAoB,EAAC;MACrBtB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C;IACJ;IAEA,MAAME,IAAI,GAAG,wBAAwB;IACrC,MAAMC,IAAI,GAAG;MACTiB,cAAc,EAAGC;IACrB,CAAC;IACD,IAAG;MACC,MAAML,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtD,OAAOa,MAAM,CAACb,IAAI;IACtB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EACJ;;EAEE;EACA,MAAMC,oBAAoB,CAAC7B,SAAS,EAAE;IAClC,IAAG,CAACA,SAAS,EAAE;MACXE,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC;IACJ;IAEA,MAAME,IAAI,GAAG,8BAA8B;IAC3C,MAAMC,IAAI,GAAG;MACTwB,oBAAoB,EAAG9B,SAAS;MAChC+B,QAAQ,EAAG,EAAE;MACbC,0BAA0B,EAAG,EAAE;MAC/BC,UAAU,EAAG,CAAC;MACdC,aAAa,EAAG;IACpB,CAAC;IACD,IAAG;MACC,MAAMf,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtD,OAAOa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEb,IAAI;IACvB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EACJ;EAEA,MAAMO,gBAAgB,CAACnC,SAAS,EAAEoC,QAAQ,EAAE;IACxC,IAAG,CAACpC,SAAS,IAAI,CAACoC,QAAQ,EAAC;MACvBlC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD;IACJ;IAEA,MAAME,IAAI,GAAG,wBAAwB;IACrC,MAAMC,IAAI,GAAG;MACTwB,oBAAoB,EAAG9B,SAAS;MAChC+B,QAAQ,EAAGK;IACf,CAAC;IAED,IAAG;MACC,MAAMjB,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtD,OAAOa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEb,IAAI;IACvB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EACJ;EAEA,MAAMS,aAAa,CAACC,QAAQ,EAAwF;IAAA,IAAtFC,YAAY,uEAAG,EAAE;IAAA,IAAEC,YAAY,uEAAG,KAAK;IAAA,IAAEC,aAAa,uEAAE,CAAC;IAAA,IAAEC,iBAAiB,uEAAG,KAAK;IAC9G,IAAG,CAACJ,QAAQ,EAAC;MACTpC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC;IACJ;IAEA,MAAME,IAAI,GAAG,qBAAqB;IAClC,MAAMC,IAAI,GAAG;MACTqC,WAAW,EAAEL,QAAQ;MACrBN,0BAA0B,EAAC,EAAE;MAC7BY,YAAY,EAACJ,YAAY;MACzBK,aAAa,EAACJ,aAAa;MAC3BK,YAAY,EAACP,YAAY;MACzBQ,iBAAiB,EAACL;IACtB,CAAC;IACD,IAAG;MACC,MAAMvB,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtD,OAAOa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEb,IAAI;IACvB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EACJ;EAEA,MAAMoB,iBAAiB,CAACC,aAAa,EAAEC,kBAAkB,EAAE;IACvD,IAAG,CAACD,aAAa,EAAC;MACd/C,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC;IACJ;IAEA,MAAME,IAAI,GAAG,yBAAyB;IACtC,MAAMC,IAAI,GAAG;MACT6C,qBAAqB,EAAGF,aAAa;MACrCG,kBAAkB,EAAGF;IACzB,CAAC;IACD,IAAG;MACC,MAAM/B,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtD,OAAOa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEb,IAAI;IACvB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EAEJ;EAEA,MAAMyB,uBAAuB,CAACC,WAAW,EAAC;IACtC,IAAG,CAACA,WAAW,EAAC;MACZpD,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC;IACJ;IAEA,MAAME,IAAI,GAAG,kBAAkB;IAC/B,MAAMC,IAAI,GAAG;MACT0B,0BAA0B,EAAG,EAAE;MAC/BuB,cAAc,EAAGD;IACrB,CAAC;IACD,IAAG;MACC,MAAMnC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAAChB,IAAI,EAAEC,IAAI,CAAC;MACtD,OAAOa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEb,IAAI;IACvB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZ1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MAClB,OAAO,IAAI;IACf;EAEJ;EAEAR,SAAS,GAAG;IACR,IAAIzB,MAAM,EAAE,OAAOA,MAAM;IACzBA,MAAM,GAAGH,KAAK,CAACgE,MAAM,CAAC;MAClBC,OAAO,EAAE,IAAI,CAAC3D,OAAO;MACrB4D,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IACF,OAAOhE,MAAM;EACnB;AAEJ;AAEA,eAAeC,OAAO"},"metadata":{},"sourceType":"module"}